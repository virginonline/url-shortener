version: "3.8"

services:
  urls-storage:
    image: cassandra:5.0
    container_name: urls-storage-db
    command: [ -f ]
    environment:
      CASSANDRA_CLUSTER_NAME: app
    ports:
      - "9042:9042"
      - "9160:9160"
      - "7199:7199"
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - cassandra_data:/var/lib/cassandra
    ulimits:
      memlock: -1

  redis:
    container_name: redis-cache
    image: redis:7.2-rc-alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - cache:/data

  app:
    build:
      context: .
    container_name: url-shortener-service
    ports:
      - '8083:8083'
    env_file:
      - .env
    depends_on:
      urls-storage:
        condition: service_healthy
      redis:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  cassandra-ui:
    image: ipushc/cassandra-web
    container_name: cassandra-webui
    ports:
      - '3001:3001'
    environment:
      HOST_PORT: ":3001"
      CASSANDRA_HOST: urls-storage
      CASSANDRA_PORT: 9042
      CASSANDRA_USER: cassandra
      CASSANDRA_PASSWORD: cassandra
    restart: on-failure
    depends_on:
      redis:
        condition: service_started
      urls-storage:
        condition: service_healthy



volumes:
  cassandra_data:
    driver: local
  cache:
    driver: local